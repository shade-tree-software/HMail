<div data-no-turbolink>
  <div class="show-for-medium-down">
    <%= render 'small_mailboxes' %>
  </div>
  <div class="show-for-large-up">
    <%= render 'regular_mailboxes' %>
  </div>

  <script type="text/template" id="inbox-template">
    <div data-alert class="server-alert alert"></div>
    <div class="row">
      <div class="large-8 columns">
        <div data-alert class="alert-box info">
          <%% if (emails.length > 0) { %>
          Inbox for <%= @users %>
          <%% } else { %>
          Inbox for <%= @users %> is empty
          <%% } %>
        </div>
      </div>
      <div class="large-4 columns show-for-large-up">
        <%= link_to 'Compose Message', new_email_path, :class => 'small round button' %>
      </div>
    </div>
    <%% if (info.pages > 1) { %>
    <div class="row">
      <div class="large-8 columns">
        <button type="button"
        <%%= info.page === 1 ? 'disabled' : '' %> class="tiny round button prevPage">Previous Page</button>
        Page <%%= info.page %> of <%%= info.pages %>
        <button type="button"
        <%%= info.page === info.pages ? 'disabled' : '' %> class="tiny round button nextPage">Next Page</button>
      </div>
    </div>
    <%% } %>
    <%% if (emails.length > 0) { %>
    <div class="show-for-small-only">
      <table>
        <tbody>
        <%% _.each(emails, function(email) { %>
        <%% if (email.get('unread')) { %>
        <tr style="font-weight:bold">
          <%% } else { %>
        <tr>
          <%% } %>
          <td>
            <ul class="list-style: none">
              <% unless current_user.secondary_users.empty? %>
                  <li>User: <%%= email.get('user') %></li>
              <% end %>
              <%% var date = new Date(email.get('date') * 1000) %>
              <li>Date: <%%= date.toLocaleString() %></li>
              <li>From: <%%= email.get('sender') %></li>
              <li>Subject: <a href="/emails/<%%=email.get('id')%>"><%%= email.get('subject') %></a></li>
            </ul>
          </td>
        </tr>
        <%% }); %>
        </tbody>
      </table>
    </div>
    <div class="show-for-medium-up">
      <table>
        <thead>
        <tr>
          <% unless current_user.secondary_users.empty? %>
              <th>User</th>
          <% end %>
          <th>Date</th>
          <th>From</th>
          <th>Subject</th>
        </tr>
        </thead>

        <tbody>
        <%% _.each(emails, function(email) { %>
        <%% if (email.get('unread')) { %>
        <tr style="font-weight:bold">
          <%% } else { %>
        <tr>
          <%% } %>
          <% unless current_user.secondary_users.empty? %>
              <td><%%= email.get('user') %></td>
          <% end %>
          <%% var date = new Date(email.get('date') * 1000) %>
          <td><%%= date.toLocaleString() %></td>
          <td><%%= email.get('sender') %></td>
          <td><a href="/emails/<%%=email.get('id')%>"><%%= email.get('subject') %></a></td>
        </tr>
        <%% }); %>
        </tbody>
      </table>
    </div>
    <%% } %>
  </script>

  <script type="text/template" id="sent-template">
    <div class="row">
      <div class="large-8 columns">
        <div data-alert class="alert-box info">
          <%% if (emails.length > 0) { %>
          Sent Messages
          <%% } else { %>
          There are no sent messages
          <%% } %>
        </div>
      </div>
      <div class="large-4 columns show-for-large-up">
        <%= link_to 'Compose Message', new_email_path, :class => 'small round button' %>
      </div>
    </div>
    <%% if (info.pages > 1) { %>
    <div class="row">
      <div class="large-8 columns">
        <button type="button"
        <%%= info.page === 1 ? 'disabled' : '' %> class="tiny round button prevPage">Previous Page</button>
        Page <%%= info.page %> of <%%= info.pages %>
        <button type="button"
        <%%= info.page === info.pages ? 'disabled' : '' %> class="tiny round button nextPage">Next Page</button>
      </div>
    </div>
    <%% } %>
    <%% if (emails.length > 0) { %>
    <div class="show-for-small-only">
      <table>
        <tbody>
        <%% _.each(emails, function(email) { %>
        <tr>
          <td>
            <ul class="list-style: none">
              <%% var date = new Date(email.get('date') * 1000) %>
              <li>Date: <%%= date.toLocaleString() %></li>
              <li>To: <%%= email.get('recipients') %></li>
              <li>Subject: <a href="/emails/<%%=email.get('id')%>"><%%= email.get('subject') %></a></li>
            </ul>
          </td>
        </tr>
        <%% }); %>
        </tbody>
      </table>
    </div>
    <div class="show-for-medium-up">
      <table>
        <thead>
        <tr>
          <th>Date</th>
          <th>To</th>
          <th>Subject</th>
        </tr>
        </thead>

        <tbody>
        <%% _.each(emails, function(email) { %>
        <tr>
          <%% var date = new Date(email.get('date') * 1000) %>
          <td><%%= date.toLocaleString() %></td>
          <td><%%= email.get('recipients') %></td>
          <td><a href="/emails/<%%=email.get('id')%>"><%%= email.get('subject') %></a></td>
        </tr>
        <%% }); %>
        </tbody>
      </table>
    </div>
    <%% } %>
  </script>

  <script type="text/template" id="archived-template">
    <div class="row">
      <div class="large-8 columns">
        <div data-alert class="alert-box info">
          <%% if (emails.length > 0) { %>
          Archived Messages
          <%% } else { %>
          There are no archived messages
          <%% } %>
        </div>
      </div>
      <div class="large-4 columns show-for-large-up">
        <%= link_to 'Compose Message', new_email_path, :class => 'small round button' %>
      </div>
    </div>
    <%% if (info.pages > 1) { %>
    <div class="row">
      <div class="large-8 columns">
        <button type="button"
        <%%= info.page === 1 ? 'disabled' : '' %> class="tiny round button prevPage">Previous Page</button>
        Page <%%= info.page %> of <%%= info.pages %>
        <button type="button"
        <%%= info.page === info.pages ? 'disabled' : '' %> class="tiny round button nextPage">Next Page</button>
      </div>
    </div>
    <%% } %>
    <%% if (emails.length > 0) { %>
    <div class="show-for-small-only">
      <table>
        <tbody>
        <%% _.each(emails, function(email) { %>
        <tr>
          <td>
            <ul class="list-style: none">
              <% unless current_user.secondary_users.empty? %>
                  <li>User: <%%= email.get('user') %></li>
              <% end %>
              <%% var date = new Date(email.get('date') * 1000) %>
              <li>Date: <%%= date.toLocaleString() %></li>
              <li>From: <%%= email.get('sender') %></li>
              <li>Subject: <a href="/emails/<%%=email.get('id')%>"><%%= email.get('subject') %></a></li>
            </ul>
          </td>
        </tr>
        <%% }); %>
        </tbody>
      </table>
    </div>
    <div class="show-for-medium-up">
      <table>
        <thead>
        <tr>
          <% unless current_user.secondary_users.empty? %>
              <th>User</th>
          <% end %>
          <th>Date</th>
          <th>From</th>
          <th>Subject</th>
        </tr>
        </thead>

        <tbody>
        <%% _.each(emails, function(email) { %>
        <tr>
          <% unless current_user.secondary_users.empty? %>
              <td><%%= email.get('user') %></td>
          <% end %>
          <%% var date = new Date(email.get('date') * 1000) %>
          <td><%%= date.toLocaleString() %></td>
          <td><%%= email.get('sender') %></td>
          <td><a href="/emails/<%%=email.get('id')%>"><%%= email.get('subject') %></a></td>
        </tr>
        <%% }); %>
        </tbody>
      </table>
    </div>
    <%% } %>
  </script>

  <script type="text/template" id="unapproved-template">
    <div class="row">
      <div class="large-8 columns">
        <div data-alert class="alert-box info">
          <%% if (emails.length > 0) { %>
          Messages from unapproved senders
          <%% } else { %>
          There are no messages from unapproved senders
          <%% } %>
        </div>
      </div>
      <div class="large-4 columns show-for-large-up">
        <%= link_to 'Compose Message', new_email_path, :class => 'small round button' %>
      </div>
    </div>
    <%% if (info.pages > 1) { %>
    <div class="row">
      <div class="large-8 columns">
        <button type="button"
        <%%= info.page === 1 ? 'disabled' : '' %> class="tiny round button prevPage">Previous Page</button>
        Page <%%= info.page %> of <%%= info.pages %>
        <button type="button"
        <%%= info.page === info.pages ? 'disabled' : '' %> class="tiny round button nextPage">Next Page</button>
      </div>
    </div>
    <%% } %>
    <%% if (emails.length > 0) { %>
    <div data-alert class="alert-box alert">
      These messages will be deleted after one week
    </div>
    <div class="show-for-small-only">
      <table>
        <tbody>
        <%% _.each(emails, function(email) { %>
        <%% if (email.get('unread')) { %>
        <tr style="font-weight:bold">
          <%% } else { %>
        <tr>
          <%% } %>
          <td>
            <ul class="list-style: none">
              <% unless current_user.secondary_users.empty? %>
                  <li>User: <%%= email.get('user') %></li>
              <% end %>
              <%% var date = new Date(email.get('date') * 1000) %>
              <li>Date: <%%= date.toLocaleString() %></li>
              <li>From: <%%= email.get('sender') %></li>
              <li>
                <a href="/emails/<%%=email.get('id')%>" data-method="delete" data-confirm="Are you sure you want to delete this message?" class="tiny round button">Delete</a>
              </li>
            </ul>
          </td>
        </tr>
        <%% }); %>
        </tbody>
      </table>
    </div>
    <div class="show-for-medium-up">
      <table>
        <thead>
        <tr>
          <% unless current_user.secondary_users.empty? %>
              <th>User</th>
          <% end %>
          <th>Date</th>
          <th>From</th>
          <th></th>
        </tr>
        </thead>

        <tbody>
        <%% _.each(emails, function(email) { %>
        <%% if (email.get('unread')) { %>
        <tr style="font-weight:bold">
          <%% } else { %>
        <tr>
          <%% } %>
          <% unless current_user.secondary_users.empty? %>
              <td><%%= email.get('user') %></td>
          <% end %>
          <%% var date = new Date(email.get('date') * 1000) %>
          <td><%%= date.toLocaleString() %></td>
          <td><%%= email.get('sender') %></td>
          <td>
            <a href="/emails/<%%=email.get('id')%>" data-method="delete" data-confirm="Are you sure you want to delete this message?" class="tiny round button">Delete</a>
          </td>
        </tr>
        <%% }); %>
        </tbody>
      </table>
    </div>
    <%% } %>
  </script>

  <script>

    (function () {

      var EmailCollection = Backbone.Collection.extend({
        url: '/emails',
        parse: function (response) {
          return response.emails;
        }
      });

      var inboxEmails = new EmailCollection();
      var sentEmails = new EmailCollection();
      var archivedEmails = new EmailCollection();
      var unapprovedEmails = new EmailCollection();

      var lastConnectTime = new Date(0);

      var onFailure = function () {
      };
      var onSuccess = function () {
        lastConnectTime = new Date();
        $(".server-alert").each(function (index, elem) {
          $(elem).html("").removeClass("alert-box");
        });
      };

      var updateEmailCount = function (selectorText, mailboxType, unreadCount) {
        var $elem = $(selectorText);
        var regex = new RegExp(mailboxType + "( \\(\\d+\\))?");
        $elem.each(function (index, elem) {
          var newTitle;
          if (unreadCount > 0) {
            newTitle = $(elem).html().replace(regex, mailboxType + " (" + unreadCount + ")");
            $(elem).css('font-weight', 'bold');
          } else {
            newTitle = mailboxType;
            $(elem).css('font-weight', 'normal');
          }
          $(elem).html(newTitle);
        });
      };

      var updateTitleText = function(unreadCount){
        var $title = $('title');
        var title = $title.html();
        var countText = '(' + unreadCount + ')';
        if (unreadCount > 0) {
          if (title.endsWith(')')) {
            $title.html(title.replace(/\(\d+\)/, countText));
          } else {
            $title.html(title + ' ' + countText);
          }
        } else {
          $title.html(title.replace(/ \(\d+\)/, ''));
        }
      };

      var MailboxView = Backbone.View.extend({
        pageInfo: {page: 1, pages: 1},
        nextPage: function () {
          this.update(this.pageInfo.page + 1);
        },
        prevPage: function () {
          this.update(this.pageInfo.page - 1);
        },
        events: {
          "click .nextPage:not(.disabled)": "nextPage",
          "click .prevPage:not(.disabled)": "prevPage"
        },
        render: function () {
          this.update(this.pageInfo.page);
        }
      });

      var InboxView = MailboxView.extend({
        el: '.inbox',
        update: function (page) {
          var that = this;
          inboxEmails.fetch({
            data: {
              mailbox_type: 'inbox',
              page: page
            },
            success: function (emails, response) {
              onSuccess();
              var template = _.template($('#inbox-template').html(), {
                that: this,
                emails: emails.models,
                info: response.info
              });
              updateEmailCount(".inbox-title", "Inbox", response.info.unread);
              updateTitleText(response.info.unread);
              that.$el.html(template);
              that.pageInfo = response.info;
              $(document).foundation('tab', 'reflow');
            },
            error: onFailure()
          })
        }
      });

      var SentView = MailboxView.extend({
        el: '.sent',
        update: function (page) {
          var that = this;
          sentEmails.fetch({
            data: {
              mailbox_type: 'sent',
              page: page
            },
            success: function (emails, response) {
              onSuccess();
              var template = _.template($('#sent-template').html(), {
                that: this,
                emails: emails.models,
                info: response.info
              });
              that.$el.html(template);
              that.pageInfo = response.info;
              $(document).foundation('tab', 'reflow');
            },
            error: onFailure()
          })
        }
      });

      var ArchivedView = MailboxView.extend({
        el: '.archived',
        update: function (page) {
          var that = this;
          archivedEmails.fetch({
            data: {
              mailbox_type: 'archived',
              page: page
            },
            success: function (emails, response) {
              onSuccess();
              var template = _.template($('#archived-template').html(), {
                that: this,
                emails: emails.models,
                info: response.info
              });
              that.$el.html(template);
              that.pageInfo = response.info;
              $(document).foundation('tab', 'reflow');
            },
            error: onFailure()
          })
        }
      });

      var UnapprovedView = MailboxView.extend({
        el: '.unapproved',
        update: function (page) {
          var that = this;
          unapprovedEmails.fetch({
            data: {
              mailbox_type: 'unapproved',
              page: page
            },
            success: function (emails, response) {
              onSuccess();
              var template = _.template($('#unapproved-template').html(), {
                that: this,
                emails: emails.models,
                info: response.info
              });
              updateEmailCount(".unapproved-title", "Unapproved", response.info.unread);
              that.$el.html(template);
              that.pageInfo = response.info;
              $(document).foundation('tab', 'reflow');
            },
            error: onFailure()
          })
        }
      });

      var inboxView = new InboxView();
      var sentView = new SentView();
      var archivedView = new ArchivedView();
      var unapprovedView = new UnapprovedView();

      var popSuccess = function(data){
        console.log(JSON.stringify(data));
        if (data.bad_emails && data.bad_emails.length > 0){
          var preamble = 'Unable to get info from GMail for the following accounts: ';
          $(".bad-emails").html(preamble + data.bad_emails).addClass("alert-box");
        }else{
          $(".bad-emails").html('').removeClass("alert-box");
        }
        onSuccess();
      };

      var pop = function () {
        $.get("/emails/refresh", {secondary_users: 'even'}, popSuccess).fail(onFailure);
        setTimeout(function(){
          $.get("/emails/refresh", {secondary_users: 'odd'}, popSuccess).fail(onFailure);
        }, 60000);
      };

      var renderAll = function () {
        if (lastConnectTime.getTime() + 30000 < new Date().getTime()) {
          $(".server-alert").html("Unable to connect to server.  Retrying...").addClass("alert-box");
        }
        inboxView.render();
        sentView.render();
        archivedView.render();
        unapprovedView.render();
      };

      pop();
      renderAll();
      setInterval(pop, 120000);
      setInterval(renderAll, 15000);

    }());

  </script>
</div>